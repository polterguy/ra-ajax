


  ******************************************************************

                        ChangeLog for Ra-Ajax

  ******************************************************************

  ------------------------------------------------------------------

                          Version 0.9.1

       Say something intelligent about this release here...

  ------------------------------------------------------------------

* Changed the "Button" property of the TabView to public since it's
  the only way to add up BehaviorUpdater to it. This means that you
  can now have BehaviorUpdater attached to specific TabViews to ease
  the experience on the user for tabview changes that might take
  some time.

* Made a couple of extra constructors for BehaviorUpdater since it
  is often created in code and thereby it's easier to add them up
  with properties when there are constructors taking their 
  properties.

* Fixed bug in BehaviorUpdater that made it sometimes lock the 
  entire screen until a browser refresh was executed. This was
  especially happening in combination with that some container
  wrapping the widget with the obscurer was being ReRendered.
  This is a severe bug in the previous version, if you are using
  BehaviorUpdater.

* You can now add up more then one CssClass to the Window by e.g.
  doing something like this; CssClass="window myCustomClass".
  The Window will only use the first CssClass (window above) to
  figure out the skin parts. The second CssClass will only
  affect the root DOM node of your Window. This makes it possible
  to completely eliminate the usage of the style property in
  the Window.

* You can now add up more then one CssClass to the AutoCompleter 
  by e.g. doing something like this; CssClass="auto myCustomClass".
  The AutoCompleter will only use the first CssClass (auto above) to
  figure out the skin parts. The second CssClass will only
  affect the root DOM node of your AutoCompleter. This makes it 
  possible to completely eliminate the usage of the style property 
  in the AutoCompleter.

* Added the possibility of DENYING expansion of TreeNode items in
  the Tree Control. If this is set there is nothing the user can
  do which will trigger "expansion". Might be useful for scenarios
  where you either don't want to allow user exansion or you want
  "something else" to trigger the expansion of TreeNode items...

* Added up an extra property called "Xtra" on RaControl (meaning
  all controls in Ra-Ajax) which is meant to be extra information
  that controls can store which is only meant for being handled on
  the server. This is especially useful in scenarios where you're
  e.g. through databinding creating controls in e.g. a GridView or
  a Repeater and you need to know the ID of the "current record" 
  for a "Delete record" LinkButton etc. But be CAREFUL with it since
  it adds to the ViewState of your page. So DON'T misuse it!





  ------------------------------------------------------------------

                          Version 0.9.0

       Fixed some serious bugs and also added up a new
       recursive FindControl which is quite powerful.

  ------------------------------------------------------------------

* Fixed a bug in Style serialization logic (again) unfortunately
  a small rendering bug came into the 0.8.6 release which was that
  the "GetStylesForResponse" method in StyleCollection.cs would
  actually serialize BOTH the ViewState value AND the 
  "AfterViewStateTracking" value which would occassionally make 
  the same style appear *twice* in the style attribute of the 
  control. This is fixed now.

* Fixed a bug that renders Style value even if they're "empty".
  In Ajax callbacks this should happen, though when rendering
  HTML for some reasons it should never render "empty" value
  like e.g. "display:;" etc. This is now fixed.

* Fixed a bug which didn't apply the 'autocomplete="off"'
  attribute for Firefox on Debian installations which in turn
  made the whole Ajax engine for Ra-Ajax go into "undefined state"
  when user clicked Back, Forward or Refresh buttons...
  This is actually due to a copyright issue between Mozilla and
  Debian which made them re-brand the browser to a different name
  in their (Debian) distribution...

* Fixed a bug that made it impossible to style the WHOLE CheckBox
  and RadioButton. Previously the RadioButton and the CheckBox
  would apply the style and CssClass properties to only the input
  element itself and not the entire span wrapping the whole thing.
  This made it impossible to style the "whole thing". Note that
  this might render compatibility problems for you if you have
  "walk arounds" already for this problem. If your CheckBoxes
  and RadioButtons looks funny, then this is the reason. To fix
  this in existing projects realize that the style and class
  attributes are now applied ONLY for a SPAN element which
  actually WRAPS the entire control.

* Added Text property for AutoCompleter which can be set and 
  retrieved.

* AutoCompleter now works when setting Focus and Select on it.

* Created a new project which is a "selector engine" for the 
  server-side. Kind of like the jQuery version for server-side
  WebControl and Control traversal and selection.
  This project is called RaSelector and can be thought of like
  an "advanced version" of a recursive FindControl 
  implementation...





  ------------------------------------------------------------------

                          Version 0.8.6

       This is more of a feature release then the previous one, 
       though we are still mainly focusing on bug fixes - we 
       still had the time for more features this time then in the 
       previous release.

  ------------------------------------------------------------------

* Changed the inheritance chain of the Menu widget. The MenuItems 
  is now inheriting from Panel and the MenuItem is now inheriting
  from Label. This should make it easier for you to construct
  "dummy" Menus which only contains text and nothing more due to
  that the Label have the Text property. You can still add Child
  Controls to MenuItem controls, but if you don't need anything
  else then a Text property for your menu items then you can 
  create smaller and easier understood code by not being forced 
  to create a Literal control to contain the Text but rather use
  the Text property directly from the MenuItem control.
  The DOM structure for the Menu however is completely unchanged...
  Check out the Ajax-Menu.aspx for a sample of using the Text 
  property directly instead of adding Literal child controls...
  This doesn't render incompatible changes in any way, but it makes
  it easier to create Menus in the future and if you wish you also
  have the opportunity to change your code to a far easier to 
  understand code-model.

* Changed the inheritance chain also for the Tree widget. This
  means that for Tree Nodes you can just set the Text property 
  instead of fiddling with Literal controls like you previously 
  had to. TreeNodes inherits from Panel now and TreeNode 
  inherits from Label. There are noe changes to the DOM 
  structure due to this however.  See sample of usage in our 
  Ajax-TreeView.aspx sample. We reduced the amount of code in the
  .ASPX page by roughly 20 with this logic and in the C# codebehind
  file with roughly 30 lines of code by introducing this logic.
  Not to mention the logic is far easier to understand now...
  This doesn't render incompatible changes in any way, but it makes
  it easier to create Menus in the future and if you wish you also
  have the opportunity to change your code to a far easier to 
  understand code-model.

* Fixed a severe bug in the Style serialization logic which makes
  the styles rendered by effects also render into the style 
  attribute of the control occassionally. This made it impossible
  to e.g make a Window initially in-visible while at the same time
  fade it into view with an effect since the Window would "flash"
  and be initially visible until the effect started running on
  the page. This was a pretty obscur and hard to track bug which
  would occassionally make the Style serialization logic not work
  as intended. If you had problems with Styles serialization logic
  previously then this is highly likely the reason. This should 
  also probably make some of your "advanced logic" render a 
  *smaller* ViewState for you since often this would fail in such
  a way that it would render ViewState value it didn't have to 
  render as in render changes done before tracking of ViewState
  was triggered into the ViewState.

* Added up a new effect called "EffectFocusAndSelect" which is 
  useful for times when you have something which fades in but
  you still want to give focus to some control inside of that
  control. The Focus and Select methods will *fail* in such
  circumstances and for such scenarios the EffectFocusAndSelect
  might come in handy.

* Fixed the Viewport-Sample.aspx so that it have the Login Window
  initially IN-visible and fades it into view as the sample is 
  finished loading.

* Fixed the SelectList so that you can now change it without
  experiencing bugs in Ajax Callbacks. Though this means that
  the default value of the Size property is now "1" and not "-1"
  as it was previously. This fixed it so that you can change the
  Size property of it in IE in addition to that you can change it
  in Chrome without experiencing funny rendering bugs or errors.

* Added up exceptions for the Tree Control hierarchy in such a way
  that you will now get intelligent exceptions if you mess up your
  Tree hierarchy by e.g. adding more then one TreeNodes per TreeNode
  or have a Tree Control without a TreeNodes collection etc.
  This is being done in the rendering phase though so you're still
  free to dynamically add up controls in codebehind without 
  experiencing false positives (exceptions where there shouldn't be)

* Now RadioButton and CheckBox will trigger MouseOver and MouseOut
  events also when hovering over/out of the label parts of them.

* You can now trap "EnterPressed" event for TextBox. This will
  actually stop the propagating of the event back up and stop the
  default action which is submitting the form.

* You can now click carriage return (enter) in InPlaceEdit to submit
  the changes you've done without having the form postback.

* Steel skin didn't work on Linux due to a casing bug in inclusion
  of CSS file. This is fixed now.

* Added "EscPressed" event for TextBox.

* Added support for clicking Escape key in InPlaceEdit. This will
  disable the editing and discard the newly written value.

* Slightly optimized the serialization of forms when initiating an
  Ajax callback...

* You can now call RollDown and RollUp on TreeNodes from your own
  code which means that you can programmatically expand and collapse
  TreeNodes in codebehind. This also means that you can 
  programmatically (easily) check if a node is expanded or not by
  checking the Expanded property since this property now is public.

* Added a new Ajax Starter-Kit - an RSS reader. Sample is called
  Viewport-RSS-Starter-Kit.aspx. It features an RSS reader where
  you can add and delete RSS feeds and read (fully ajaxified) news
  items from those RSS endpoints. Note it currently only support 
  RSS 2.0 and not Atom or RSS 1.0.

* Added the "CreateExtraControlsAtBottom" event for the Calendar
  which if handled can create "extra controls" and append in
  between the calendar surface and the "today button". This is
  being used in the newly created DateTimePicker...

* Created an Ajax DateTimePicker which can fetch time values in
  addition to the date values.

* Added up keyboard shortcuts for most Starter-Kits where it 
  makes sense. E.g. GridView uses ALT+SHIFT+N/P for next and
  previous. Calendar Starter-Kit have ALT+SHIFT+C for creating
  a new Activity and ESCAPE for closing "new activity window".
  Etc...

* Fixed a bug which made it impossible to enable a timer which
  was disabled during an Ajax Callback

* Added support for AccessKey for AutoCompleter.

* Added support for Tooltips for AutoCompleter





  -------------------------------------------------------------------------------

                                Version 0.8.5

       This version have been a seriously "stabilizer" which means that we 
       haven't added up much features but probably all users will feel that
       some parts of Ra-Ajax which had some bugs for them are now better and
       far more stable in usage.

  -------------------------------------------------------------------------------

* Added a more "formal process" to our development cycle. This changelog is one
  example of that.
  - This means we'll have (standardly) one release maximum per week, this will be
    on Fridays. Hopefully every Friday. These are "maintenance releases".
  - Then every first Friday of every month we will have a "major release" where
    we will increase the major version number. This will make the 1.0 release hit
    the download area first Friday in January 2009 if we succeed.

* Fixed a bug with setting focus which makes IE fail if DOM element is not visible
  for some reasons (ancestor node might have display:none)
  It still fails, but at least it fails without shutting down all future Ajax and
  giving error messages.
  Relevant for Calendar Starter-Kit.

* Fixed a display bug with IE in Calendar Starter-Kit which made the "Create new 
  Activity" window show up "skewed"...

* Changed the number of nodes in our "Huge Nodes Collection" TreeView - TreeNode 
  in the TreeView sample from 500 to 200 nodes since 500 has a bad tendency of 
  crashing IE...

* Brushed up some of the styles for the sample website. Blue borders around thumbs
  etc...

* Fixed styling bug with Calendar in Combining Controls sample.

* Fixed a severe bug in InPlaceEdit which made the Text property being rendered 
  twice. This happened due to inheriting the InPlaceEdit from Label. It is now
  inheriting from Panel.

* Added support for overriding the Tag property of the Panel - just as we've had
  for a long time for the Label property. This means you can have a Panel render
  as e.g. <p></p> etc...

* Fixed a bug in Window which makes all declaratively created Behaviors (including
  BehaviorObscurer) attach to the Content control collection instead of the Window
  itself. This creates "skewed visuals" for Obscurers on Window. This means BTW
  that there is probably few if any reasons for giving the Obscurer an explicit
  ZIndex property...

* Fixed a bug in BehaviorObscurer which made it obscure also the Control it was 
  ment to make modal if there's an HTML element in the page below the Form element
  with absolute or relative position. Applies only for IE. 

* Fixed a bug in BehaviorObscurer which made it not obscure the entire document
  viewport in FireFox (and possibly other browsers too)

* Fixed a bug in BehaviorObscurer which made the obscurer NOT cover the entire 
  browser Viewport (always)
  The Obscurer now should cover the Browser Viewport for ALL browser in ALL 
  scenarios!

* Fixed a bug in EffectMove which made IE fail if element did not have an
  explicit top or left style before effect was initiated.

* Fixed hovering bugs in IE in Accordion skins "Sapphire" and "Steel". When
  hovering in IE the skin changed to a color background which was not 
  intentionally.

* BehaviorObscurer will resize itself when browser is being resized. 
  Previously the Obscurer would never resize itself when browser was being 
  resized. This would previously make it possible to get to controls actually
  behind the obscurer. The only part left to figure out is when scrolling
  vertically...!

* Fixed height of "Create new activity" on Calendar Starter-Kit since some Safari 
  doesn't respect height style of input form elements...!

* You can now change the Visible property of TabViews inside of TabControls
  in Ajax Callbacks

* You can now change the Caption property of TabViews in Ajax Callbacks

* The TabView now have an "Enabled" property which defaults to true. If
  it is false then the TabView *cannot* bet set to the ActiveTab by 
  clicking it. You will also get visual clues in the skins of the TabControl 
  if you set this property to false...

* Added DefaultWidget property for Ra Panel (and therefore also Window etc)
  which if defined will target the widget with the given ID for being clicked 
  when Enter key is pressed when something inside that Panel has focus.
  Very useful for having default buttons being triggered when user clicks
  enter inside a Panel. Kind of the same as DefaultButton from normal ASP.NET
  Controls. Though DefaultWidget can target ANY type of Widget, including 
  CheckBoxes, DropDownLists etc in addition to Buttons. This ie because in
  Ra-Ajax also non-button controls can observe the Click event...
  When DefaultWidget is being triggered that Widget will also gain Focus.

* Fixed a bug in the internals of Ra-Ajax which made stopping events on both
  Safari and Chrome not work. This means that everything in Ra-Ajax which
  relied on being able to stop a DOM event from bubbling now works in both
  Safari and Chrome (it wasn't really that much that relied on being abl to 
  stop events though)
  Note that this only happens if you return "double false" from your JS event
  handlers as in; [false, false]...!

* Fixed so that MouseOut does NOT trigger when mouse enters a child element
  of the one handling the MouseOut event.

* Fixed so that MouseOver does NOT trigger when mouse re-enters from a child 
  element and back into the main surface of the control.





