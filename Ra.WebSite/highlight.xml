<?xml version="1.0" encoding="ISO-8859-1" ?>
<highlight needs-build="yes" save-build="no">
	<!-- families of keywords -->
	<keywordlists>
    <!-- C# keywords -->
    <keywordlist id="kwcs-keywords">
      <kw>partial</kw>
      <kw>abstract</kw>
      <kw>as</kw>
      <kw>base</kw>
      <kw>bool</kw>
      <kw>break</kw>
      <kw>byte</kw>
      <kw>case</kw>
      <kw>catch</kw>
      <kw>char</kw>
      <kw>checked</kw>
      <kw>class</kw>
      <kw>const</kw>
      <kw>continue</kw>
      <kw>decimal</kw>
      <kw>default</kw>
      <kw>delegate</kw>
      <kw>do</kw>
      <kw>double</kw>
      <kw>else</kw>
      <kw>enum</kw>
      <kw>event</kw>
      <kw>explicit</kw>
      <kw>extern</kw>
      <kw>false</kw>
      <kw>finally</kw>
      <kw>fixed</kw>
      <kw>float</kw>
      <kw>for</kw>
      <kw>foreach</kw>
      <kw>goto</kw>
      <kw>if</kw>
      <kw>implicit</kw>
      <kw>in</kw>
      <kw>int</kw>
      <kw>interface</kw>
      <kw>internal</kw>
      <kw>is</kw>
      <kw>lock</kw>
      <kw>long</kw>
      <kw>namespace</kw>
      <kw>new</kw>
      <kw>null</kw>
      <kw>object</kw>
      <kw>operator</kw>
      <kw>out</kw>
      <kw>override</kw>
      <kw>params</kw>
      <kw>private</kw>
      <kw>protected</kw>
      <kw>public</kw>
      <kw>readonly</kw>
      <kw>ref</kw>
      <kw>return</kw>
      <kw>sbyte</kw>
      <kw>sealed</kw>
      <kw>short</kw>
      <kw>sizeof</kw>
      <kw>stackalloc</kw>
      <kw>static</kw>
      <kw>string</kw>
      <kw>struct</kw>
      <kw>switch</kw>
      <kw>this</kw>
      <kw>throw</kw>
      <kw>true</kw>
      <kw>try</kw>
      <kw>typeof</kw>
      <kw>uint</kw>
      <kw>ulong</kw>
      <kw>unchecked</kw>
      <kw>unsafe</kw>
      <kw>ushort</kw>
      <kw>using</kw>
      <kw>virtual</kw>
      <kw>void</kw>
      <kw>volatile</kw>
      <kw>while</kw>
      <kw>get</kw>
      <kw>set</kw>
    </keywordlist>

    <!-- C# preprocessor keywords -->
    <keywordlist id="kwcs-preprocessors" pre="#">
      <kw>if</kw>
      <kw>else</kw>
      <kw>elif</kw>
      <kw>endif</kw>
      <kw>define</kw>
      <kw>undef</kw>
      <kw>warning</kw>
      <kw>error</kw>
      <kw>line</kw>
      <kw>region</kw>
      <kw>endregion</kw>
    </keywordlist>

  </keywordlists>

  
  <!-- Languages syntax specification -->
	<languages>

    <language id="cs">

      <!-- Code contexts: default (most common) is code. -->
      <contexts default="code">

        <!-- basic source code context -->
        <context id="code" attribute="code">

          <!-- /* block of comment */ -->
          <detect2chars attribute="hidden" context="blockcomment" char="/" char1="*" />

          <!-- // line of comment -->
          <detect2chars attribute="hidden" context="linecomment" char="/" char1="/" />

          <!-- " " literals -->
          <regexp id="literal" attribute="literal" context="code" expression="&quot;(.|\\&quot;|\\\r\n)*?((\\\\)+&quot;|[^\\]{1}&quot;)" />

          <regexp id="klass" attribute="klass" context="code" expression="(EventArgs|UserControl|SlidingMenuLevel|SlidingMenuItem|Button|CheckBox|Dynamic|HiddenField|ImageButton|Label|LinkButton|Panel|RaControl|RadioButton|RaWebControl|SelectList|TextArea|TextBox|Accordion|AccordionView|AutoCompleter|AutoCompleterItem|Calendar|Comet|DateTimePicker|ExtButton|InPlaceEdit|Menu|MenuItem|MenuItems|MessageBox|ResizeHandler|RichEdit|SlidingMenu|SlidingMenuItem|SlidingMenuLevel|TabControl|TabView|Timer|Tree|TreeNode|TreeNodes|WebPart|Window|Random|EffectBorder|EffectFadeIn|EffectFadeOut|EffectFocusAndSelect|EffectHighlight|EffectHiglightText|EffectMove|EffectRollDown|EffectRollUp|EffectSize|EffectTimeOut|Effect|BehaviorDraggable|BehaviorDroppabe|BehaviorObscurable|BehaviorUnveiler|BehaviorUpdater|Behavior|AjaxManager|List)" />

          <!-- keyword c++ -->
          <keyword attribute="keyword" context="code" family="kwcs-keywords" />

          <!-- preprocessor keywords -->
          <keyword attribute="keyword" context="code" family="kwcs-preprocessors" />

        </context>


        <!-- block comment /* ... ¨*/ -->
        <context id="blockcomment" attribute="cpp-blockcomment">
          <!-- finish line of comment, start block -->
          <detect2chars attribute="hidden" context="code" char="*" char1="/" />
        </context>
        
        <!-- line comment // ... -->
        <context id="linecomment" attribute="cpp-linecomment">
          <!-- finish line of comment, start block -->
          <detect2chars attribute="hidden" context="blockcomment" char="/" char1="*" />
          <!-- finish line of comment end of line -->
          <linecontinue attribute="hidden" context="code" />
        </context>
      </contexts>
    </language>
    
    
    

    <!-- XML -->
		<language id="xml">
			<contexts default="value">
				<!-- Value context -->
				<context id="value" attribute="xml-value">

          <!-- Comment -->
					<regexp id="rx-xml-comment" attribute="xml-comment" context="value" expression="&lt;!--(.|\n)*?--&gt;" />

          <!-- cdata -->
					<regexp id="rx-hidden" attribute="hidden" context="cdata" expression="&lt;!\[CDATA\[" />

          <!-- closing element -->
					<regexp id="rx-close-elem" attribute="xml-bracket" context="closing-element" expression="&lt;/" />

          <!-- opening element -->
					<regexp id="rx-open-elem" attribute="xml-bracket" context="opening-element" expression="&lt;\?{0,1}" />
				</context>

        <!-- cdata tag -->
				<context id="cdata" attribute="xml-cdata">
					<regexp id="rx-hidden" attribute="hidden" context="value" expression="\]\]&gt;" />
				</context>

        <!-- opening element context -->
				<context id="opening-element" attribute="xml-code">
					<!-- find tag... -->
					<regexp id="rx-attr" attribute="xml-tag" context="element-attributes" expression="\b((\w|-)+\:){0,1}(\w|-)+\b" />
				</context>

        <!-- closing element -->
				<context id="closing-element" attribute="xml-code">
					<regexp id="rx-closing-elem" attribute="xml-tag" context="closing-element" expression="\b(\w|-)+\b" />
					<regexp id="rx-value" attribute="xml-bracket" context="value" expression="(\?|/){0,1}&gt;" />
				</context>

        <!-- attributes group -->
				<context id="element-attributes" attribute="xml-code">
					<!-- find end of element -->
					<regexp id="rx-value" attribute="xml-bracket" context="value" expression="(\?|/){0,1}&gt;" />
					<!-- find attributes... -->
					<regexp id="rx-attr-name" attribute="xml-attribute-name" context="attribute-name" expression="\b(\w|-)+\b" />
				</context>

        <!-- attribute name -->
				<context id="attribute-name" attribute="hidden">
					<regexp id="rx-elem-attrs" attribute="xml-attribute-value" context="element-attributes" expression="=(&quot;.*?&quot;|&apos;.*?&apos;|\b(\w|-)+\b)" />
				</context>
			</contexts>
		</language>
	</languages>
</highlight>
